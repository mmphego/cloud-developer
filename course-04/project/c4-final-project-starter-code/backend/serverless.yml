service:
  name: serverless-todo-app

plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function
  - serverless-reqvalidator-plugin
  - serverless-aws-documentation
  - serverless-dynamodb-local
  - serverless-offline

# Read: https://github.com/dherault/serverless-offline
custom:
  serverless-offline:
    port: 3003

provider:
  name: aws
  runtime: nodejs12.x

  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}

environment:
  # client secret:
  Auth0_Client_Secret : 5TKU-aUGSPdinxdG6lYutNG18e-cO0FQROOrTTQ1B75uexFp-yRcjfvOfceIB91N


functions:

  Auth:
    handler: src/lambda/auth/auth0Authorizer.handler
    iamRoleStatements:
      - Effect: Allow
        Action:
          - xray:PutTraceSegments
          - xray:PutTelemetryRecords
        Resource:
          - "*"

  # TODO: Configure this function
  GetTodos:
    handler: src/lambda/http/getTodos.handler
    events:
      - http:
          authorizer: Auth
          cors: true
          method: get
          path: todos

  # TODO: Configure this function
  GetTodos:
  CreateTodo:
    handler: src/lambda/http/createTodo.handler
    events:
      - http:
          authorizer: Auth
          cors: true
          method: post
          path: todos

  # TODO: Configure this function
  UpdateTodo:
    handler: src/lambda/http/updateTodo.handler
    events:
      - http:
          authorizer: Auth
          cors: true
          method: patch
          path: todos/{todoId}

  # TODO: Configure this function
  DeleteTodo:
    handler: src/lambda/http/deleteTodo.handler
    events:
      - http:
          authorizer: Auth
          cors: true
          method: delete
          path: todos/{todoId}

  # TODO: Configure this function
  GenerateUploadUrl:
    handler: src/lambda/http/generateUploadUrl.handler
    events:
      - http:
          authorizer: Auth
          cors: true
          method: post
          path: todos/{todoId}/attachment

resources:
  Resources:
    # TODO: Add any necessary AWS resources